@use "sass:color";
@use "sass:map";
@import "../variables";
@import "../mixins";

/* === FORMS */
input.input,
select.select,
textarea.textarea {
  border-radius: $element-border-radius;
  display: inline-block;
  width: 100%;
  position: relative;
  border: 1px solid map.get($gray, 400);
  background-color: white;
  line-height: $element-line-height;
  padding: calc(1.2rem - 3px) 1rem;
  outline: none;
  font-size: map.get($sizes, 5);

  &::placeholder {
    color: map.get($gray, 400);
  }

  @include transition;

  &[disabled] {
    background-color: map.get($gray, 50);
    border-color: map.get($gray, 400);
    pointer-events: none;
    touch-action: none;
  }

  &.is-valid {
    &,
    &:focus {
      border-color: map.get($green, 500);
    }

    &:focus {
      box-shadow: $element-box-shadow-focus rgba(map.get($green, 500), $element-outline-opacity);
    }
  }

  &.is-invalid {
    &,
    &:focus {
      border-color: map.get($red, 500);
    }

    &:focus {
      box-shadow: $element-box-shadow-focus rgba(map.get($red, 500), $element-outline-opacity);
    }
  }
}

input[type="checkbox"].checkbox + label::before,
input[type="checkbox"].checkbox + label::after {
  border-radius: $element-border-radius;
}

input[type="radio"].radio + label::before,
input[type="radio"].radio + label::after {
  border-radius: 50%;
}

input[type="checkbox"].checkbox,
input[type="radio"].radio {
  position: absolute;
  z-index: -1;
  opacity: 0;

  + label {
    cursor: pointer;
    position: relative;
    width: auto;
    margin-bottom: 0;
    padding-left: 1.8rem;

    &::before,
    &::after {
      width: 1rem;
      height: 1rem;
      content: "";
      position: absolute;
      left: 0;
      top: 4px;

      @include transition;
    }

    &::before {
      background-color: transparent;
      border: 1px solid map.get($gray, 900);
      z-index: 1;
    }

    &::after {
      z-index: 2;
      transform: scale(0);
      opacity: 0;
    }
  }

  &[disabled] + label {
    &::before,
    &::after {
      border-color: map.get($gray, 400) !important;
    }

    &:hover {
      cursor: not-allowed;
    }
  }

  &:checked {
    + label::after {
      opacity: 1;
      transform: scale(0.6);
    }

    &[disabled] + label::after {
      background-color: map.get($gray, 400);
    }
  }

  @each $name, $color in (valid: map.get($green, 500), invalid: map.get($red, 500)) {
    &.is-#{$name}:checked,
    &.is-#{$name} {
      + label {
        &::before {
          border-color: $color;
        }

        &::after {
          background-color: $color;
        }
      }

      &:focus + label::before {
        box-shadow: $element-box-shadow-focus rgba($color, $element-outline-opacity);
      }
    }
  }
}
